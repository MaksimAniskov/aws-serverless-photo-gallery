{"version":3,"sources":["data/index.tsx","graphql/queries.ts","components/Note.tsx","components/Gallery.tsx","components/FolderCard.tsx","components/ImageCard.tsx","components/Folders.tsx","App.tsx","serviceWorker.js","index.js"],"names":["ActionType","getSignedCookies","reducer","state","action","type","folderName","Object","objectSpread","nextToken","undefined","subfolders","images","hasMoreImages","loading","isLoading","loaded","error","clearError","addImages","concat","StateContext","React","createContext","StateProvider","props","react_default","a","createElement","Provider","value","useReducer","children","useContext","useFetchSubfoldersAndSomeImages","_ref","asyncToGenerator","regenerator_default","mark","_callee","context","_context","dispatch","wrap","_context2","prev","next","slicedToArray","abrupt","performQuery","slice","ListSubfoldersAndImagesQuery","stop","_x","_x2","apply","this","arguments","useFetchMoreImages","_ref2","_callee2","_context3","_context4","console","_x3","_callee3","query","_context5","params","result","foldersData","imagesData","_context6","path","API","graphql","graphqlOperation","sent","data","listSubfolders","filter","folder","listImages","items","item","map","url","t0","finish","Note","className","caption","Gallery","swipe","_context$","_React$useState","useState","width","height","_React$useState2","windowDimensions","setWindowDimensions","updateWindowDimensions","window","innerWidth","innerHeight","useEffect","addEventListener","removeEventListener","react_easy_swipe_lib_default","onSwipeMove","position","onSwipeEnd","x","react_keyboard_event_handler_default","handleKeys","onKeyEvent","key","e","components_Note","length","onNoPhotos","index","imgDimensions","approximateDimension","Math","max","floor","approximateWindowsDimensions","src","encodeURIComponent","alt","preventDefault","history","push","location","pathname","FolderCard","Card","onClick","Body","Text","ImageCard","bg","Img","variant","Folders","subfoldersToDisplay","FOLDER_LEVEL_UP","react_infinite_scroller_default","initialLoad","loadMore","hasMore","loader","CardDeck","subfolder","components_FolderCard","onChangeFolderIntent","image","i","components_ImageCard","onSwitchToViewingIntent","Amplify","configure","AWS_EXPORTS","App","_useState","_useState2","isSignedIn","setIsSignedIn","_data$useContext","dist","hide","Greetings","ConfirmSignIn","SignUp","ConfirmSignUp","TOTPSetup","AUTH_UI_OPTIONS","hideForgotPassword","ForgotPassword","onStateChange","authState","setSignedCookies","react_contexify_lib","id","react_router_dom","react_router","render","search","components_Folders","decodeURIComponent","newPath","lastIndexOf","components_Gallery","parseInt","_ref3","Auth","signOut","_setSignedCookies","forEach","nameValuePair","cookies","set","name","secure","withCookies","data_StateProvider","App_App","Boolean","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d51ca201.chunk.js","sourcesContent":["import React from 'react';\nimport { API, graphqlOperation } from 'aws-amplify';\nimport { GraphQLResult } from '@aws-amplify/api/lib/types';\n\nimport { ListSubfoldersQuery, ListImagesQuery } from '../API';\nimport { listImages } from '../graphql/queries';\n\ninterface IState {\n    isLoading: boolean,\n    error?: string,\n    folderName?: string,\n    subfolders: string[],\n    images: string[],\n    nextToken?: string,\n    hasMoreImages: boolean\n}\n\nenum ActionType {\n    loading = 'loading',\n    loaded = 'loaded',\n    error = 'error',\n    clearError = 'clearError',\n    folderName = 'folderName',\n    subfolders = 'subfolders',\n    addImages = 'addImages',\n    nextToken = 'nextToken'\n}\n\ntype Action =\n    | {\n        type: ActionType.loading\n    }\n    | {\n        type: ActionType.loaded\n    }\n    | {\n        type: ActionType.error,\n        error: string\n    }\n    | {\n        type: ActionType.clearError\n    }\n    | {\n        type: ActionType.folderName,\n        folderName: string\n    }\n    | {\n        type: ActionType.subfolders,\n        subfolders: string[]\n    }\n    | {\n        type: ActionType.addImages,\n        images: string[]\n    }\n    | {\n        type: ActionType.nextToken,\n        nextToken?: string\n    }\n\ntype Context = [IState, React.Dispatch<Action>];\n\nconst reducer = (state: IState, action: Action): IState => {\n    switch (action.type) {\n        case ActionType.folderName:\n            return {\n                ...state,\n                folderName: action.folderName,\n                nextToken: undefined,\n                subfolders: [],\n                images: [],\n                hasMoreImages: false\n            };\n        case ActionType.loading: return { ...state, isLoading: true };\n        case ActionType.loaded: return { ...state, isLoading: false };\n        case ActionType.error: return { ...state, error: action.error };\n        case ActionType.clearError: return { ...state, error: undefined };\n        case ActionType.subfolders: return { ...state, subfolders: action.subfolders };\n        case ActionType.addImages: return { ...state, images: state.images.concat(action.images) };\n        case ActionType.nextToken:\n            return {\n                ...state,\n                nextToken: action.nextToken,\n                hasMoreImages: !!action.nextToken\n            };\n        default: return state;\n    }\n};\n\nconst StateContext = React.createContext<Context>(null as unknown as Context);\n\nexport const StateProvider: React.FunctionComponent<{}> = (props) => {\n    const initialState: IState = {\n        subfolders: [],\n        images: [],\n        isLoading: false,\n        hasMoreImages: false,\n    };\n    return (\n        <StateContext.Provider\n            value={React.useReducer<React.Reducer<IState, Action>>(reducer, initialState)}\n        >\n            {props.children}\n        </StateContext.Provider>\n    );\n};\n\nexport const useContext = () => React.useContext(StateContext);\n\nexport const useFetchSubfoldersAndSomeImages = async (context: Context, folderName: string) => {\n    const [state, dispatch] = context;\n    if (folderName === state.folderName) {\n        return;\n    }\n    dispatch({ type: ActionType.folderName, folderName });\n    await performQuery(context, folderName.slice(1), ListSubfoldersAndImagesQuery);\n}\n\nexport const useFetchMoreImages = async (context: Context) => {\n    const [state] = context;\n    if (state.isLoading) return;\n    if (!state.folderName) {\n        console.error('Call useFetchSubfoldersAndSomeImages before calling useFetchMoreImages');\n        return;\n    }\n    await performQuery(context, state.folderName.slice(1), listImages);\n}\n\nasync function performQuery(context: Context, folderName: string, query: string) {\n    const [state, dispatch] = context;\n\n    dispatch({ type: ActionType.loading });\n    dispatch({ type: ActionType.clearError });\n\n    try {\n        const params = {\n            path: folderName,\n            nextToken: state.nextToken\n        };\n        const result = await API.graphql(graphqlOperation(query, params)) as GraphQLResult;\n\n        const foldersData = (result.data as ListSubfoldersQuery).listSubfolders;\n        if (foldersData) {\n            dispatch({\n                type: ActionType.subfolders,\n                subfolders: (foldersData as string[]).filter(folder => folder !== '')\n            });\n        }\n\n        const imagesData = (result.data as ListImagesQuery).listImages;\n        if (imagesData) {\n            if (imagesData.items) {\n                dispatch({\n                    type: ActionType.addImages,\n                    images: imagesData.items\n                        .filter(item => !!item)\n                        .map(item => item!.url) as string[]\n                });\n            }\n            dispatch({\n                type: ActionType.nextToken,\n                nextToken: imagesData.nextToken ? imagesData.nextToken : undefined\n            });\n        }\n    } catch (result) {\n        console.error(result);\n        dispatch({ type: ActionType.error, error: 'Oops... Something went wrong.' });\n    } finally {\n        dispatch({ type: ActionType.loaded });\n    }\n}\n\nconst ListSubfoldersAndImagesQuery = `query ListSubfoldersAndImages($path: String) {\n    listSubfolders(path: $path),\n    listImages(path: $path) {\n        items {\n          url\n        }\n        nextToken\n    }\n  }`;\n","// tslint:disable\n// this is an auto generated file. This will be overwritten\n\nexport const listImages = `query ListImages($path: String, $limit: Int, $nextToken: String) {\n  listImages(path: $path, limit: $limit, nextToken: $nextToken) {\n    items {\n      url\n    }\n    nextToken\n  }\n}\n`;\nexport const listSubfolders = `query ListSubfolders($path: String) {\n  listSubfolders(path: $path)\n}\n`;\nexport const getSignedCookies = `query GetSignedCookies {\n  getSignedCookies {\n    name\n    value\n  }\n}\n`;\n","import React from 'react';\n\ninterface Props {\n    caption: string\n}\n\nconst Note: React.FunctionComponent<Props> = (props) => {\n    return (\n        <div className=\"note\">\n            {props.caption}\n        </div>\n    );\n}\n\nexport default Note;\n","import React from 'react';\nimport KeyboardEventHandler from 'react-keyboard-event-handler';\nimport Swipe from 'react-easy-swipe';\n\nimport * as data from '../data';\nimport Note from './Note';\n\ninterface Props {\n    path: string,\n    index: number,\n    onNoPhotos?: () => void,\n    history: any\n}\n\nconst Gallery: React.FunctionComponent<Props> = (props) => {\n\n    const context = data.useContext();\n    const [{ isLoading, images, hasMoreImages }] = context;\n\n    const [windowDimensions, setWindowDimensions] = React.useState({ width: 0, height: 0 });\n    React.useEffect(\n        () => {\n            window.addEventListener('resize', updateWindowDimensions);\n            updateWindowDimensions();\n            data.useFetchSubfoldersAndSomeImages(context, props.path);\n\n            return () => {\n                window.removeEventListener('resize', updateWindowDimensions);\n            };\n        },\n        [context, props.path]\n    );\n\n    function updateWindowDimensions() {\n        setWindowDimensions({ width: window.innerWidth, height: window.innerHeight });\n    }\n\n    type TSwipeMove = { x: number };\n    let swipe: TSwipeMove;\n    return (\n        <Swipe\n            onSwipeMove={(position: TSwipeMove) => { swipe = position }}\n            onSwipeEnd={() => swipe.x < 0 ? next() : prev()}\n        >\n            <KeyboardEventHandler handleKeys={['right', 'down', 'pagedown', 'space', 'enter']}\n                onKeyEvent={(key: any, e: React.SyntheticEvent) => next(e)} />\n            < KeyboardEventHandler handleKeys={['left', 'up', 'pageup']}\n                onKeyEvent={(key: any, e: React.SyntheticEvent) => prev(e)} />\n\n            {(() => {\n                if (isLoading) return <Note caption=\"Loading...\" />;\n                if (!images.length) {\n                    props.onNoPhotos && props.onNoPhotos();\n                    return <Note caption=\"No photos\" />;\n                }\n                if (props.index >= images.length) {\n                    return <Note caption=\"The end\" />;\n                } else {\n                    const imgDimensions = approximateWindowsDimensions();\n                    return (\n                        <div>\n                            <img\n                                src={`/image/fit-in/${imgDimensions.width}x${imgDimensions.height}/${encodeURIComponent(images[props.index])}`\n                                }\n                                className=\"center\"\n                                alt={images[props.index]}\n                            />\n\n                            { // Hidden next photo to force caching it upfront\n                                props.index + 1 < images.length &&\n                                <img width=\"0\" height=\"0\"\n                                    src={`/image/fit-in/${imgDimensions.width}x${imgDimensions.height}/${encodeURIComponent(images[props.index + 1])}`}\n                                    alt={''}\n                                />\n                            }\n                            { // Hidden prev photo to force caching it upfront\n                                props.index > 0 &&\n                                <img width=\"0\" height=\"0\"\n                                    src={`/image/fit-in/${imgDimensions.width}x${imgDimensions.height}/${encodeURIComponent(images[props.index - 1])}`}\n                                    alt={''}\n                                />\n                            }\n                        </div>\n                    );\n                }\n            })()}\n        </Swipe>\n    );\n\n\n    function prev(e?: React.SyntheticEvent) {\n        e && e.preventDefault();\n        if (props.index > 0) {\n            props.history.push(props.history.location.pathname + '?' + (props.index - 1));\n        }\n    }\n\n    function next(e?: React.SyntheticEvent) {\n        e && e.preventDefault();\n        if (props.index >= images.length) {\n            return;\n        } else if (props.index + 1 >= images.length && hasMoreImages) {\n            data.useFetchMoreImages(context);\n        }\n        props.history.push(props.history.location.pathname + '?' + (props.index + 1));\n    }\n\n    function approximateWindowsDimensions() {\n        return {\n            width: approximateDimension(windowDimensions.width),\n            height: approximateDimension(windowDimensions.height)\n        };\n\n        function approximateDimension(value: number) {\n            return Math.max(100, Math.floor(value / 50) * 50);\n        }\n\n    }\n\n}\n\nexport default Gallery;\n","import React from 'react';\nimport { Card } from \"react-bootstrap\";\n\ninterface Props {\n    folderName: string,\n    onClick: () => void,\n    className?: string\n}\n\nconst FolderCard: React.FunctionComponent<Props> = (props) => {\n    return (\n        <Card onClick={props.onClick} className={props.className}>\n            <Card.Body>\n                <Card.Text>{props.folderName}</Card.Text>\n            </Card.Body>\n        </Card>\n    );\n}\n\nexport default FolderCard;","import React from 'react';\nimport { Card } from \"react-bootstrap\";\n\ninterface Props {\n    url: string,\n    onClick: () => void\n}\n\nconst ImageCard: React.FunctionComponent<Props> = (props) => {\n    return (\n        <Card\n            bg=\"secondary\"\n            onClick={props.onClick}\n        >\n            <Card.Img\n                src={'/image/240x240/smart/' + props.url}\n                variant=\"top\"\n            />\n        </Card>\n    );\n}\n\nexport default ImageCard;\n","import React, { useEffect } from 'react';\nimport { CardDeck } from \"react-bootstrap\";\nimport InfiniteScroll from 'react-infinite-scroller';\n\nimport * as data from '../data';\nimport Note from './Note';\nimport FolderCard from './FolderCard';\nimport ImageCard from './ImageCard';\n\ninterface Props {\n    path: string,\n    onChangeFolderIntent?: (folderName: string) => void,\n    onSwitchToViewingIntent: (index: number) => void\n}\n\nconst Folders: React.FunctionComponent<Props> = (props) => {\n    const context = data.useContext();\n    useEffect(() => {\n        data.useFetchSubfoldersAndSomeImages(context, props.path);\n    });\n\n    const [{ subfolders, isLoading, images, hasMoreImages }] = context;\n    let subfoldersToDisplay = subfolders;\n    if (props.path !== '/') {\n        subfoldersToDisplay = ([FOLDER_LEVEL_UP]).concat(subfolders);\n    }\n\n    return (\n        (isLoading && !hasMoreImages) ?\n            <Note caption=\"Loading...\" />\n            :\n            <InfiniteScroll\n                className=\"folder-browser\"\n                initialLoad={false}\n                loadMore={() => data.useFetchMoreImages(context)}\n                hasMore={hasMoreImages}\n                loader={<Note key={0} caption=\"Loading...\" />}\n            >\n                <CardDeck className=\"folders\">\n                    {subfoldersToDisplay.map(subfolder => (\n                        <FolderCard\n                            className={subfolder === FOLDER_LEVEL_UP ? 'level-up' : undefined}\n                            key={subfolder}\n                            folderName={subfolder}\n                            onClick={() => props && props.onChangeFolderIntent && props.onChangeFolderIntent(subfolder)}\n                        />\n                    ))}\n                </CardDeck>\n                <CardDeck className=\"images\">\n                    {images.map((image, i) => {\n                        image = encodeURIComponent(image);\n                        return (\n                            <ImageCard\n                                key={image}\n                                url={image}\n                                onClick={() => props.onSwitchToViewingIntent(i)}\n                            />\n                        );\n                    })}\n              </CardDeck>\n            </InfiniteScroll>\n    );\n}\n\nexport default Folders;\n\nexport const FOLDER_LEVEL_UP = '⇖';\n","import React, { useState } from 'react';\nimport Amplify, { API, graphqlOperation } from 'aws-amplify';\nimport {\n  Authenticator,\n  Greetings,\n  ConfirmSignIn,\n  SignUp,\n  ConfirmSignUp,\n  TOTPSetup,\n  ForgotPassword\n} from 'aws-amplify-react';\nimport { Menu, Item, Separator, MenuProvider } from 'react-contexify';\nimport 'react-contexify/dist/ReactContexify.min.css';\nimport { HashRouter as Router, Route } from 'react-router-dom';\nimport { withCookies } from 'react-cookie';\n\nimport { GetSignedCookiesQuery } from './API';\nimport { getSignedCookies } from './graphql/queries';\nimport { GraphQLResult } from '@aws-amplify/api/lib/types';\nimport './App.css';\nimport Gallery from './components/Gallery';\nimport Folders, { FOLDER_LEVEL_UP } from './components/Folders';\nimport Note from './components/Note';\nimport * as data from './data';\n\ndeclare global {\n  interface Window {\n    AWS_EXPORTS: {\n      aws_project_region: string;\n      aws_appsync_graphqlEndpoint: string;\n      aws_appsync_authenticationType: string;\n      aws_user_pools_id:  string;\n      aws_user_pools_web_client_id: string;\n    };\n    AUTH_UI_OPTIONS?: {\n      hideForgotPassword: boolean;\n    };\n  }\n}\nAmplify.configure(window.AWS_EXPORTS);\n\ninterface Props {\n  cookies: any\n}\n\nconst App: React.FunctionComponent<Props> = (props) => {\n\n  const [isSignedIn, setIsSignedIn] = useState<boolean>(false);\n\n  const [{ error }] = data.useContext();\n  if (error) return <Note caption={error} />;\n  return (\n    <Authenticator\n      hide={[\n        Greetings,\n        ConfirmSignIn,\n        SignUp,\n        ConfirmSignUp,\n        TOTPSetup\n      ].concat(window.AUTH_UI_OPTIONS && window.AUTH_UI_OPTIONS.hideForgotPassword ? [ForgotPassword] : [])}\n      onStateChange={async (authState: string) => {\n        if (authState === 'signedIn') {\n          await setSignedCookies();\n          setIsSignedIn(true);\n        }\n      }}\n    >\n      {isSignedIn &&\n        <MenuProvider id=\"menu\">\n          <Router>\n            <Route render={({ history }) => {\n              const path: string = history.location.pathname;\n              if (history.location.search === '?browse') {\n                return (\n                  <Folders\n                    path={decodeURIComponent(path)}\n\n                    onChangeFolderIntent={\n                      (folderName) => {\n                        let newPath: string;\n                        if (folderName === FOLDER_LEVEL_UP) {\n                          newPath = path.slice(0, path.lastIndexOf('/'));\n                          if (newPath === '')\n                            newPath = '/';\n                        } else {\n                          newPath = path;\n                          if (newPath !== '/') {\n                            newPath += '/'\n                          }\n                          newPath += encodeURIComponent(folderName);\n                        }\n                        history.push(newPath + '?browse');\n                      }\n                    }\n\n                    onSwitchToViewingIntent={(index) => history.push(history.location.pathname + '?' + index)}\n                  />\n                )\n              } else {\n                return <Gallery\n                  history={history}\n                  path={decodeURIComponent(path)}\n                  index={history.location.search ? parseInt(history.location.search.slice(1)) : 0}\n                  onNoPhotos={() => history.push(history.location.pathname + '?browse')}\n                />\n              }\n            }} />\n\n            <Route render={({ history }) => (\n              <Menu id=\"menu\">\n                {history.location.search !== '?browse' &&\n                  <Item onClick={() => history.push(history.location.pathname + '?browse')}>\n                    Browse\n                    </Item>\n                }\n                {history.location.search !== '?browse' &&\n                  <Separator />\n                }\n                <Item onClick={() => signOut()}>\n                  Sign out\n                  </Item>\n              </Menu>\n            )} />\n          </Router>\n        </MenuProvider>\n      }\n    </Authenticator>\n  );\n\n  async function setSignedCookies(): Promise<void> {\n    const result = await API.graphql(graphqlOperation(getSignedCookies)) as GraphQLResult;\n    const data: GetSignedCookiesQuery = result.data as GetSignedCookiesQuery;\n\n    data.getSignedCookies && data.getSignedCookies.forEach((nameValuePair) => {\n      if (!nameValuePair) {\n        return;\n      }\n      props.cookies.set(\n        nameValuePair.name,\n        nameValuePair.value,\n        {\n          path: '/image',\n          secure: true\n        }\n      );\n    });\n  }\n\n  function signOut(): void {\n    Amplify.Auth.signOut();\n    setIsSignedIn(false);\n  }\n\n}\n\nconst AppWithData: React.FunctionComponent<Props> = (props) => {\n  return (\n    <data.StateProvider>\n      <App {...props} />\n    </data.StateProvider>\n\n  );\n}\n\nexport default withCookies(AppWithData);\n","const isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    window.location.hostname === '[::1]' ||\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        checkValidServiceWorker(swUrl, config);\n        navigator.serviceWorker.ready.then(() => {\n        });\n      } else {\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  fetch(swUrl)\n    .then(response => {\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}